/* Mixins:
   ========================================================================== */
$opacities: (75, 50, 25, 5);
@each $val in $opacities {
  .dark-shade--#{$val} { color: rgba($dark-shade, $val / 100); }
  .bg-dark-shade--#{$val} { background-color: rgba($dark-shade, $val / 100); }
}







// px to rem
@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}

// size to one line
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// placeholder helper
@mixin placeholder {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder {
    @content;
  }
  ::-moz-placeholder {
    @content;
  }
  :-ms-input-placeholder {
    @content;
  }
}

// ----------- study
@mixin paragraphs($fz: 20px, $lh: 20px, $color: #333) {
  font-size: $fz;
  line-height: $lh;
  color: $color;
  font-style: italic;
  
  span { color: red; }

  @content;
}

@mixin button($bg-and-border-color: #285, $border: false) {
  display: block;
  margin: 30px auto 0;
  padding: 7px 14px;
  max-width: 300px;
  text-decoration: none;
  text-align: center;

  @if $border == true {
    border: 2px solid $bg-and-border-color;
  } @else {
    background: $bg-and-border-color;
  }

  &:hover {
    background-color: darken($bg-and-border-color, 10%); // darken - встроенная функция sass

   @if $border == true {
     border-color: darken($bg-and-border-color, 10%);
   }
  }
}

@for $i from 1 through 5 {
  .block--#{$i} { margin-left: #{$i}px; }
}

$floats: (left, right, none);
@each $float in $floats {
  .float--#{$float} { float: #{$float}; }
}

$colors: (white: #fff, black: #000, green: #0f0);
@each $name, $value in $colors {
  .color--#{$name} { color: #{$value}; }
}